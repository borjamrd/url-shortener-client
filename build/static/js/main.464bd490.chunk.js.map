{"version":3,"sources":["components/Footer.js","constants/userConstants.js","components/Header.js","actions/userActions.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/urlsConstants.js","actions/urlsActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyUrls/MyUrls.js","screens/SingleUrl/SingleUrl.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/SingleUrl/CreateUrl.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/urlsReducers.js","reducers/userReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","href","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","Header","setSearch","navigate","useNavigate","dispatch","useDispatch","userInfo","useSelector","state","userLogin","useEffect","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","Collapse","id","Nav","Form","inline","FormControl","type","placeholder","onChange","e","target","value","Link","NavDropdown","title","name","Item","Divider","onClick","a","localStorage","removeItem","LandingPage","useForm","register","handleSubmit","React","useState","modalShow","setModalShow","url","setUrl","urlmod","setUrlmod","ModalUrl","props","Modal","show","onHide","handleClose","animation","size","centered","closeButton","Title","Body","navigator","clipboard","writeText","_id","Alert","to","Button","onSubmit","resultForm","console","log","origUrl","URLSearchParams","append","axios","method","headers","data","then","res","shortUrl","error","InputGroup","Text","required","MainScreen","children","URLS_LIST_REQUEST","URLS_LIST_SUCCESS","URLS_LIST_FAIL","URLS_CREATE_REQUEST","URLS_CREATE_SUCCESS","URLS_CREATE_FAIL","URLS_UPDATE_REQUEST","URLS_UPDATE_SUCCESS","URLS_UPDATE_FAIL","URLS_DELETE_REQUEST","URLS_DELETE_SUCCESS","URLS_DELETE_FAIL","deleteUrlAction","getState","config","Authorization","token","delete","payload","message","response","updateUrlAction","put","Loading","alignItems","height","Spinner","ErrorMessage","fontSize","MyUrls","history","search","urlList","loading","urls","urlDelete","loadingDelete","errorDelete","successDelete","success","successCreate","urlCreate","successUpdate","urlUpdate","get","push","marginLeft","marginBottom","URLS","map","index","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","eventKey","window","confirm","alert","updatedAt","clicks","content","createdAt","substring","SingleUrl","params","useParams","setUrlToModif","date","setDate","fetching","preventDefault","Group","controlId","Label","Control","LoginScreen","email","setEmail","password","setPassword","post","setItem","JSON","stringify","login","RegisterScreen","setName","pic","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","File","pics","FormData","fetch","body","json","toString","catch","err","postDetails","files","label","custom","CreateUrl","resetHandler","createUrlAction","Date","toLocaleDateString","ProfileScreen","confirmPassword","userUpdate","md","user","varient","src","alt","App","s","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.464bd490.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer\r\n            style={{\r\n                width: '100%',\r\n                position: 'relative',\r\n                bottom: 0,\r\n                display: 'flex',\r\n                justifyContent: 'center'\r\n            }}>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright &copy; Url-shortener |{' '}\r\n                        <a href=\"https://github.com/borjamrd\">@borjamrd</a>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\n","import React, { useEffect } from 'react';\r\nimport { Container, Form, FormControl, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {} from 'react-router-dom';\r\nimport { logout } from '../actions/userActions';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Header({ setSearch }) {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        navigate('/');\r\n    };\r\n\r\n    useEffect(() => {}, [userInfo]);\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand href=\"/\">Url shortener</Navbar.Brand>\r\n\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"m-auto\">\r\n                        {userInfo && (\r\n                            <Form inline>\r\n                                <FormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"Search\"\r\n                                    className=\"mr-sm-2\"\r\n                                    onChange={(e) => setSearch(e.target.value)}\r\n                                />\r\n                            </Form>\r\n                        )}\r\n                    </Nav>\r\n                    <Nav>\r\n                        {userInfo ? (\r\n                            <>\r\n                                <Nav.Link href=\"/mis-urls\">Mis urls</Nav.Link>\r\n                                <NavDropdown\r\n                                    title={`${userInfo.name}`}\r\n                                    id=\"collasible-nav-dropdown\">\r\n                                    <NavDropdown.Item href=\"/profile\">\r\n                                        {/* <img\r\n                      alt=\"\"\r\n                      src={`${userInfo.pic}`}\r\n                      width=\"25\"\r\n                      height=\"25\"\r\n                      style={{ marginRight: 10 }}\r\n                    /> */}\r\n                                        MI perfil\r\n                                    </NavDropdown.Item>\r\n\r\n                                    <NavDropdown.Divider />\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Cerrar sesión\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            </>\r\n                        ) : (\r\n                            <Nav.Link href=\"/login\">Iniciar sesión</Nav.Link>\r\n                        )}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS\r\n} from '../constants/userConstants';\r\nimport axios from 'axios';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            'https://url-shortener-service-etj7.onrender.com/api/users/login',\r\n            { email, password },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const register = (name, email, password, pic) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            'https://url-shortener-service-etj7.onrender.com/api/users/',\r\n            { name, pic, email, password },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            'https://url-shortener-service-etj7.onrender.com/api/users/profile',\r\n            user,\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Alert, Button, Container, InputGroup, Row } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport './LandingStyles.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nfunction LandingPage() {\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n    const { register, handleSubmit } = useForm();\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [url, setUrl] = useState('');\r\n    const [urlmod, setUrlmod] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate('/mis-urls');\r\n        }\r\n        // cutURLguest()\r\n    }, [navigate, userInfo]);\r\n\r\n    function ModalUrl(props) {\r\n        return (\r\n            <>\r\n                <Modal\r\n                    show={props.show}\r\n                    onHide={props.handleClose}\r\n                    animation={false}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Enhorabuena! Aquí tienes tu URL acortada:</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>\r\n                            <strong>Url original: </strong> {url}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Url acortada: </strong> {urlmod}{' '}\r\n                            <button\r\n                                key={url._id}\r\n                                onClick={() => navigator.clipboard.writeText(`${urlmod}`)}>\r\n                                Copiar\r\n                            </button>\r\n                        </p>\r\n                        <p>\r\n                            <strong>Clicks recibidos: </strong>{' '}\r\n                            <Alert variant=\"warning\">\r\n                                Debes <Link to=\"/login\">iniciar sesión</Link> o{' '}\r\n                                <Link to=\"/register\">crearte una cuenta</Link>\r\n                            </Alert>{' '}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Última modificación: </strong>{' '}\r\n                            <Alert variant=\"warning\">\r\n                                Debes <Link to=\"/login\">iniciar sesión</Link> o{' '}\r\n                                <Link to=\"/register\">crearte una cuenta</Link>\r\n                            </Alert>{' '}\r\n                        </p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={props.handleClose}>\r\n                            Cerrar\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n    const handleUrl = (resultForm) => {\r\n        console.log('Result Form: ', resultForm);\r\n        const origUrl = resultForm.origUrl;\r\n        console.log('orgiulr: ', origUrl);\r\n        var params = new URLSearchParams();\r\n        params.append('origUrl', `${origUrl}`);\r\n\r\n        try {\r\n            axios({\r\n                method: 'post',\r\n                url: 'http://localhost:5001/api/urls/createwauth',\r\n                // params\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: {\r\n                    origUrl: origUrl\r\n                }\r\n            }).then((res) => {\r\n                const data = res.data;\r\n                setModalShow(true);\r\n                setUrl(data.origUrl);\r\n                setUrlmod(data.shortUrl);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Container>\r\n                <Row>\r\n                    <div className=\"intro-text\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"typing-demo\">\r\n                                <h1 className=\"title\">Url shortener</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"url-section\">\r\n                            <form onSubmit={handleSubmit(handleUrl)}>\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <InputGroup.Text id=\"basic-addon3\">URL</InputGroup.Text>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        {...register('origUrl', { required: true })}\r\n                                        className=\"url-landing\"\r\n                                    />\r\n                                </InputGroup>\r\n\r\n                                <Button size=\"lg\" type=\"submit\" className=\"acortar\">\r\n                                    Acortar\r\n                                </Button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"buttonContainer\">\r\n                            <Link to=\"/login\">\r\n                                <Button size=\"sm\" className=\"landingbutton\">\r\n                                    Inicia sesión\r\n                                </Button>\r\n                            </Link>\r\n                            <Link to=\"/register\">\r\n                                <Button\r\n                                    variant=\"outline-primary\"\r\n                                    size=\"sm\"\r\n                                    className=\"landingbutton\">\r\n                                    Regístrate\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n                <ModalUrl show={modalShow} onHide={() => setModalShow(false)} />\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport './Screen.css';\r\n\r\nfunction MainScreen({ children, title }) {\r\n    return (\r\n        <div className=\"mainback\">\r\n            <Container>\r\n                <Row>\r\n                    <div className=\"page\">\r\n                        {title && (\r\n                            <>\r\n                                <h1 className=\"heading\">{title}</h1>\r\n                                <hr />\r\n                            </>\r\n                        )}\r\n                        {children}\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainScreen;\r\n","export const URLS_LIST_REQUEST = 'URLS_LIST_REQUEST';\r\nexport const URLS_LIST_SUCCESS = 'URLS_LIST_SUCCESS';\r\nexport const URLS_LIST_FAIL = 'URLS_LIST_FAIL';\r\n\r\nexport const URLS_CREATE_REQUEST = 'URLS_CREATE_REQUEST';\r\nexport const URLS_CREATE_SUCCESS = 'URLS_CREATE_SUCCESS';\r\nexport const URLS_CREATE_FAIL = 'URLS_CREATE_FAIL';\r\n\r\nexport const URLS_UPDATE_REQUEST = 'URLS_UPDATE_REQUEST';\r\nexport const URLS_UPDATE_SUCCESS = 'URLS_UPDATE_SUCCESS';\r\nexport const URLS_UPDATE_FAIL = 'URLS_UPDATE_FAIL';\r\n\r\nexport const URLS_DELETE_REQUEST = 'URLS_DELETE_REQUEST';\r\nexport const URLS_DELETE_SUCCESS = 'URLS_DELETE_SUCCESS';\r\nexport const URLS_DELETE_FAIL = 'URLS_DELETE_FAIL';\r\n","import {\r\n    URLS_CREATE_FAIL,\r\n    URLS_CREATE_REQUEST,\r\n    URLS_CREATE_SUCCESS,\r\n    URLS_DELETE_FAIL,\r\n    URLS_DELETE_REQUEST,\r\n    URLS_DELETE_SUCCESS,\r\n    URLS_LIST_FAIL,\r\n    URLS_LIST_REQUEST,\r\n    URLS_LIST_SUCCESS,\r\n    URLS_UPDATE_FAIL,\r\n    URLS_UPDATE_REQUEST,\r\n    URLS_UPDATE_SUCCESS\r\n} from '../constants/urlsConstants';\r\nimport axios from 'axios';\r\n\r\nexport const listUrls = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: URLS_LIST_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(\r\n            `https://url-shortener-service-etj7.onrender.com/api/urls/`,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: URLS_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({\r\n            type: URLS_LIST_FAIL,\r\n            payload: message\r\n        });\r\n    }\r\n};\r\n\r\nexport const createUrlAction = (origUrl) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: URLS_CREATE_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            `https://url-shortener-service-etj7.onrender.com/api/urls/create`,\r\n            { origUrl },\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: URLS_CREATE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({\r\n            type: URLS_CREATE_FAIL,\r\n            payload: message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUrlAction = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: URLS_DELETE_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.delete(\r\n            `https://url-shortener-service-etj7.onrender.com/api/urls/orig/${_id}`,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: URLS_DELETE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({\r\n            type: URLS_DELETE_FAIL,\r\n            payload: message\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUrlAction = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: URLS_UPDATE_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `https://url-shortener-service-etj7.onrender.com/api/urls/orig/${_id}`,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: URLS_UPDATE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({\r\n            type: URLS_UPDATE_FAIL,\r\n            payload: message\r\n        });\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loading({ size = 100 }) {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                width: '100%',\r\n                height: '100%'\r\n            }}>\r\n            <Spinner\r\n                style={{\r\n                    width: size,\r\n                    height: size\r\n                }}\r\n                animation=\"border\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst ErrorMessage = ({ variant = 'info', children }) => {\r\n    return (\r\n        <Alert variant={variant} style={{ fontSize: 20 }}>\r\n            <strong>{children}</strong>\r\n        </Alert>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useEffect } from 'react';\r\nimport { Accordion, Badge, Button, Card } from 'react-bootstrap';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteUrlAction, listUrls, updateUrlAction } from '../../actions/urlsActions';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nfunction MyUrls({ history, search }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const urlList = useSelector((state) => state.urlList);\r\n    const { loading, error, urls } = urlList;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const urlDelete = useSelector((state) => state.urlDelete);\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = urlDelete;\r\n\r\n    const urlCreate = useSelector((state) => state.urlCreate);\r\n    const { success: successCreate } = urlCreate;\r\n\r\n    const urlUpdate = useSelector((state) => state.urlUpdate);\r\n    const { success: successUpdate } = urlUpdate;\r\n\r\n    useEffect(() => {\r\n        dispatch(listUrls());\r\n        if (!userInfo) {\r\n            history.push('/orig/');\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, successUpdate]);\r\n\r\n    const deleteHandler = (_id) => {\r\n        if (window.confirm('Estás seguro?')) {\r\n            dispatch(deleteUrlAction(_id));\r\n            alert('URL eliminada con éxito');\r\n        }\r\n    };\r\n\r\n    const updateHandler = (_id) => {\r\n        dispatch(updateUrlAction(_id));\r\n    };\r\n\r\n    return (\r\n        <MainScreen title={`Hola de nuevo ${userInfo && userInfo.name}.`}>\r\n            {console.log(urlList)}\r\n            <Link to=\"/crear-url\">\r\n                <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\r\n                    Crear una nueva URL\r\n                </Button>\r\n            </Link>\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            {errorDelete && <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>}\r\n            {loading && <Loading />}\r\n            {loadingDelete && <Loading />}\r\n            {urlList.URLS &&\r\n                urlList.URLS.map((url, index) => (\r\n                    <Accordion key={index}>\r\n                        <Card style={{ margin: 10 }}>\r\n                            <Card.Header style={{ display: 'flex' }}>\r\n                                <span\r\n                                    // onClick={() => ModelShow(url)}\r\n                                    style={{\r\n                                        color: 'black',\r\n                                        textDecoration: 'none',\r\n                                        flex: 1,\r\n                                        cursor: 'pointer',\r\n                                        alignSelf: 'center',\r\n                                        fontSize: 18\r\n                                    }}>\r\n                                    <Accordion.Toggle as={Card.Text} variant=\"link\" eventKey=\"0\">\r\n                                        <strong>URL acortada: </strong> {url.shortUrl} {''}\r\n                                        <button\r\n                                            key={url._id}\r\n                                            onClick={() =>\r\n                                                navigator.clipboard.writeText(`${url.shortUrl}`)\r\n                                            }>\r\n                                            Copiar\r\n                                        </button>\r\n                                    </Accordion.Toggle>\r\n                                </span>\r\n\r\n                                <div key={index}>\r\n                                    <Button\r\n                                        href={`/urls/orig/${url._id}`}\r\n                                        onClick={() => updateHandler(url._id)}>\r\n                                        Modificar\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"danger\"\r\n                                        className=\"mx-2\"\r\n                                        onClick={() => deleteHandler(url._id)}>\r\n                                        Eliminar\r\n                                    </Button>\r\n                                </div>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>\r\n                                    <h6>\r\n                                        <strong>URL original</strong> {url.origUrl}\r\n                                    </h6>\r\n                                    <h6>\r\n                                        <strong>Última modificación</strong> {url.updatedAt}\r\n                                    </h6>\r\n                                    <h6>\r\n                                        <strong>Clicks realizados</strong> {url.clicks}\r\n                                    </h6>\r\n                                    <blockquote className=\"blockquote mb-0\">\r\n                                        <ReactMarkdown>{url.content}</ReactMarkdown>\r\n                                        <footer className=\"blockquote-footer\">\r\n                                            Fecha de creación{' '}\r\n                                            <cite title=\"Source Title\">\r\n                                                {url.createdAt.substring(0, 10)}\r\n                                            </cite>\r\n                                        </footer>\r\n                                    </blockquote>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                ))}\r\n        </MainScreen>\r\n    );\r\n}\r\n\r\nexport default MyUrls;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport axios from 'axios';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteUrlAction, updateUrlAction } from '../../actions/urlsActions';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport Loading from '../../components/Loading';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nfunction SingleUrl() {\r\n    const params = useParams();\r\n    const navigate = useNavigate();\r\n    const [origUrl, setUrlToModif] = useState();\r\n    // const [source, setSource] = useState();\r\n    // const [setMedium, setMedium] = useState();\r\n    const [date, setDate] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const urlUpdate = useSelector((state) => state.urlUpdate);\r\n    const { loading, error } = urlUpdate;\r\n\r\n    const urlDelete = useSelector((state) => state.urlDelete);\r\n    const { loading: loadingDelete, error: errorDelete } = urlDelete;\r\n\r\n    const deleteHandler = (_id) => {\r\n        if (window.confirm('Estás seguro?')) {\r\n            dispatch(deleteUrlAction(_id));\r\n            alert('Nota eliminada con éxito');\r\n        }\r\n        navigate('/mis-urls');\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetching = async () => {\r\n            const { data } = await axios.get(`http://localhost:5001/api/urls/${params.id}`);\r\n            setUrlToModif(data.origUrl);\r\n            setDate(data.updatedAt);\r\n        };\r\n\r\n        fetching();\r\n    }, [params.id, date]);\r\n\r\n    const resetHandler = () => {\r\n        setUrlToModif('');\r\n    };\r\n\r\n    const updateHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUrlAction(params.id /* , origUrl, content, category */));\r\n        // if (!origUrl) return;\r\n        alert('modificado con éxito');\r\n        resetHandler();\r\n        navigate('/mis-urls');\r\n    };\r\n\r\n    return (\r\n        <MainScreen origUrl=\"Editar Url\">\r\n            <Card>\r\n                <Card.Header>Edita tu URL</Card.Header>\r\n                <Card.Body>\r\n                    <Form onSubmit={updateHandler}>\r\n                        {loadingDelete && <Loading />}\r\n                        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n                        {errorDelete && <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>}\r\n                        <Form.Group controlId=\"origUrl\">\r\n                            <Form.Label>Modifica tu url</Form.Label>\r\n                            <Form.Control\r\n                                type=\"origUrl\"\r\n                                placeholder=\"Enter the origUrl\"\r\n                                value={origUrl}\r\n                                onChange={(e) => setUrlToModif(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        {loading && <Loading size={50} />}\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Actualizar url\r\n                        </Button>\r\n                        <Button\r\n                            className=\"mx-2\"\r\n                            variant=\"danger\"\r\n                            onClick={() => deleteHandler(params.id)}>\r\n                            Borrar url\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n\r\n                <Card.Footer className=\"text-muted\">\r\n                    Updated on - {date.substring(0, 10)}\r\n                </Card.Footer>\r\n            </Card>\r\n        </MainScreen>\r\n    );\r\n}\r\n\r\nexport default SingleUrl;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport { login } from '../../actions/userActions';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport './LoginScreen.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginScreen() {\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate('/mis-urls');\r\n        }\r\n    }, [navigate, userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n    };\r\n\r\n    return (\r\n        <MainScreen title=\"Iniciar sesión\">\r\n            <div className=\"loginContainer\">\r\n                {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n                {loading && <Loading />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Correo electrónico</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            value={email}\r\n                            placeholder=\"Enter email\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Contraseña</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={password}\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Acceder\r\n                    </Button>\r\n                </Form>\r\n                <Row className=\"py-3\">\r\n                    <Col>\r\n                        ¿No tienes usuario y contraseña? <Link to=\"/register\">Regístrate</Link>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </MainScreen>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport { register } from '../../actions/userActions';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport './RegisterScreen.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction RegisterScreen() {\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [pic, setPic] = useState(\r\n        'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'\r\n    );\r\n    const [password, setPassword] = useState('');\r\n    const [confirmpassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n    const [picMessage, setPicMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userRegister = useSelector((state) => state.userRegister);\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    const postDetails = (pics) => {\r\n        if (\r\n            pics ===\r\n            'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'\r\n        ) {\r\n            return setPicMessage('Please Select an Image');\r\n        }\r\n        setPicMessage(null);\r\n        if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n            const data = new FormData();\r\n            data.append('file', pics);\r\n            data.append('upload_preset', 'notezipper');\r\n            data.append('cloud_name', 'piyushproj');\r\n            fetch('https://api.cloudinary.com/v1_1/piyushproj/image/upload', {\r\n                method: 'post',\r\n                body: data\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setPic(data.url.toString());\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            return setPicMessage('Please Select an Image');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate('/');\r\n        }\r\n    }, [navigate, userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmpassword) {\r\n            setMessage('Passwords do not match');\r\n        } else dispatch(register(name, email, password, pic));\r\n    };\r\n\r\n    return (\r\n        <MainScreen title=\"Regístrate\">\r\n            <div className=\"loginContainer\">\r\n                {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n                {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n                {loading && <Loading />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Nombre</Form.Label>\r\n                        <Form.Control\r\n                            type=\"name\"\r\n                            value={name}\r\n                            placeholder=\"Enter name\"\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Correo electrónico</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            value={email}\r\n                            placeholder=\"Enter email\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Contraseña</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={password}\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={confirmpassword}\r\n                            placeholder=\"Confirm Password\"\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    {picMessage && <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>}\r\n                    <Form.Group controlId=\"pic\">\r\n                        <Form.Label>Profile Picture</Form.Label>\r\n                        <Form.File\r\n                            onChange={(e) => postDetails(e.target.files[0])}\r\n                            id=\"custom-file\"\r\n                            type=\"image/png\"\r\n                            label=\"Upload Profile Picture\"\r\n                            custom\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Register\r\n                    </Button>\r\n                </Form>\r\n                <Row className=\"py-3\">\r\n                    <Col>\r\n                        Have an Account ? <Link to=\"/login\">Login</Link>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </MainScreen>\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createUrlAction } from '../../actions/urlsActions';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CreateUrl() {\r\n    const [origUrl, setUrl] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const urlCreate = useSelector((state) => state.urlCreate);\r\n    const { loading, error, url } = urlCreate;\r\n\r\n    console.log(origUrl, 'origin url');\r\n    console.log(url, 'url');\r\n\r\n    const resetHandler = () => {\r\n        setUrl('');\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createUrlAction(origUrl));\r\n        if (!origUrl) return;\r\n\r\n        resetHandler();\r\n        navigate('/mis-urls');\r\n    };\r\n\r\n    useEffect(() => {}, []);\r\n\r\n    return (\r\n        <MainScreen title=\"Crear una url\">\r\n            <Card>\r\n                <Card.Header>Crea una nueva URL</Card.Header>\r\n                <Card.Body>\r\n                    <Form onSubmit={submitHandler}>\r\n                        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n                        <Form.Group controlId=\"title\">\r\n                            <Form.Label>URL</Form.Label>\r\n                            <Form.Control\r\n                                type=\"url\"\r\n                                value={origUrl}\r\n                                placeholder=\"Entroduce una URL\"\r\n                                onChange={(e) => setUrl(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        {/* \r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Parámetros UTM (opcionales) </Form.Label>\r\n              <Form.Control\r\n               type=\"url\"\r\n                value={content}\r\n                placeholder=\"SOURCE: e.g. google, newsletter\"\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n              <Form.Control\r\n               type=\"url\"\r\n                value={content}\r\n                placeholder=\"MEDUUM: e.g. banner, email\"\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n              <Form.Control\r\n               type=\"url\"\r\n                value={content}\r\n                placeholder=\"CAMPAIGN: e.g. spring_sale\"\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )} */}\r\n                        {loading && <Loading size={50} />}\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Crear URL\r\n                        </Button>\r\n                        <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\r\n                            Limpiar campos\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n\r\n                <Card.Footer className=\"text-muted\">\r\n                    Creating on - {new Date().toLocaleDateString()}\r\n                </Card.Footer>\r\n            </Card>\r\n        </MainScreen>\r\n    );\r\n}\r\n\r\nexport default CreateUrl;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport './ProfileScreen.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateProfile } from '../../actions/userActions';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [pic, setPic] = useState();\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [picMessage, setPicMessage] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const { loading, error, success } = userUpdate;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/');\r\n        } else {\r\n            setName(userInfo.name);\r\n            setEmail(userInfo.email);\r\n            setPic(userInfo.pic);\r\n        }\r\n    }, [history, userInfo]);\r\n\r\n    const postDetails = (pics) => {\r\n        setPicMessage(null);\r\n        if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n            const data = new FormData();\r\n            data.append('file', pics);\r\n            data.append('upload_preset', 'notezipper');\r\n            data.append('cloud_name', 'piyushproj');\r\n            fetch('https://api.cloudinary.com/v1_1/piyushproj/image/upload', {\r\n                method: 'post',\r\n                body: data\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setPic(data.url.toString());\r\n                    console.log(pic);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            return setPicMessage('Please Select an Image');\r\n        }\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(updateProfile({ name, email, password, pic }));\r\n    };\r\n\r\n    return (\r\n        <MainScreen title=\"EDIT PROFILE\">\r\n            <div>\r\n                <Row className=\"profileContainer\">\r\n                    <Col md={6}>\r\n                        <Form onSubmit={submitHandler}>\r\n                            {loading && <Loading />}\r\n                            {success && (\r\n                                <ErrorMessage variant=\"success\">Updated Successfully</ErrorMessage>\r\n                            )}\r\n                            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n                            <Form.Group controlId=\"name\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"email\">\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"confirmPassword\">\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    value={confirmPassword}\r\n                                    onChange={(e) =>\r\n                                        setConfirmPassword(e.target.value)\r\n                                    }></Form.Control>\r\n                            </Form.Group>{' '}\r\n                            {picMessage && (\r\n                                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n                            )}\r\n                            <Form.Group controlId=\"pic\">\r\n                                <Form.Label>Change Profile Picture</Form.Label>\r\n                                <Form.File\r\n                                    onChange={(e) => postDetails(e.target.files[0])}\r\n                                    id=\"custom-file\"\r\n                                    type=\"image/png\"\r\n                                    label=\"Upload Profile Picture\"\r\n                                    custom\r\n                                />\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" varient=\"primary\">\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col\r\n                        style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                        <img src={pic} alt={name} className=\"profilePic\" />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </MainScreen>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import './App.css';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport LandingPage from './screens/LandingPage/LandingPage';\r\nimport MyUrls from './screens/MyUrls/MyUrls';\r\nimport SingleUrl from './screens/SingleUrl/SingleUrl';\r\nimport LoginScreen from './screens/LoginScreen/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen/RegisterScreen';\r\nimport CreateUrl from './screens/SingleUrl/CreateUrl';\r\nimport { useState } from 'react';\r\nimport ProfileScreen from './screens/ProfileScreen/ProfileScreen';\r\n\r\nfunction App() {\r\n    const [search, setSearch] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <Header setSearch={(s) => setSearch(s)} />\r\n            <main className=\"App\">\r\n                <Routes>\r\n                    <Route path=\"/\" element={<LandingPage />} />\r\n                    <Route path=\"/login\" element={<LoginScreen />} />\r\n                    <Route path=\"/register\" element={<RegisterScreen />} />\r\n                    <Route path=\"/mis-urls\" element={<MyUrls />} />\r\n                    <Route path=\"/urls/orig/:id\" element={<SingleUrl />} />\r\n                    <Route path=\"/crear-url\" element={<CreateUrl />} />;\r\n                    <Route path=\"/profile\" element={<ProfileScreen />} />\r\n                </Routes>\r\n            </main>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n    urlCreateReducer,\r\n    urlDeleteReducer,\r\n    urlListReducer,\r\n    urlUpdateReducer\r\n} from './reducers/urlsReducers';\r\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from './reducers/userReducers';\r\n\r\nconst reducer = combineReducers({\r\n    urlList: urlListReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    urlCreate: urlCreateReducer,\r\n    urlDelete: urlDeleteReducer,\r\n    urlUpdate: urlUpdateReducer,\r\n    userUpdate: userUpdateReducer\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null;\r\n\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n    URLS_UPDATE_REQUEST,\r\n    URLS_UPDATE_SUCCESS,\r\n    URLS_UPDATE_FAIL,\r\n    URLS_CREATE_FAIL,\r\n    URLS_CREATE_REQUEST,\r\n    URLS_CREATE_SUCCESS,\r\n    URLS_DELETE_FAIL,\r\n    URLS_DELETE_REQUEST,\r\n    URLS_DELETE_SUCCESS,\r\n    URLS_LIST_FAIL,\r\n    URLS_LIST_REQUEST,\r\n    URLS_LIST_SUCCESS\r\n} from '../constants/urlsConstants';\r\n\r\nexport const urlListReducer = (state = { URLS: [] }, action) => {\r\n    switch (action.type) {\r\n        case URLS_LIST_REQUEST:\r\n            return { loading: true };\r\n        case URLS_LIST_SUCCESS:\r\n            return { loading: false, URLS: action.payload };\r\n        case URLS_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const urlCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case URLS_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case URLS_CREATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case URLS_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const urlDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case URLS_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case URLS_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case URLS_DELETE_FAIL:\r\n            return { loading: false, error: action.payload, success: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const urlUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case URLS_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case URLS_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case URLS_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload, success: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, userInfo: action.payload, success: true };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload, success: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './bootstrap.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}